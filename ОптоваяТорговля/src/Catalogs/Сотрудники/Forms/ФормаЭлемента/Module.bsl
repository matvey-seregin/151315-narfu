
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	ЗаписатьПользователяИБ(ТекущийОбъект);
	
	ЗаписатьФотоСотрудника(ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПрочитатьПользователяИБ(ТекущийОбъект);
	
	ПоказатьФотоСотрудника(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПарольИзменен = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	ПарольИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура АдресФотоНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗагрузитьФотоСотрудника();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура ЗагрузитьФотоСотрудника()
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Фильтр = "Картинка|*.png;*.jpg";
	
	РезультатВыбора = Ждать ПоместитьФайлНаСерверАсинх(,,, ПараметрыДиалога, УникальныйИдентификатор);
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресФото = РезультатВыбора.Адрес;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьФотоСотрудника(ТекущийОбъект)
	
	АдресФото = ПолучитьНавигационнуюСсылку(ТекущийОбъект.Ссылка, "Фото");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьФотоСотрудника(ТекущийОбъект)
	
	Если ЭтоАдресВременногоХранилища(АдресФото) Тогда
		ТекущийОбъект.Фото = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФото));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПользователяИБ(ТекущийОбъект)

	Если Не ЗначениеЗаполнено(ТекущийОбъект.ИдентификаторПользователяИБ) Тогда
		
		Если Не ВходРазрешен Тогда
			Возврат;
		КонецЕсли;
		
		ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
		
	Иначе
		
		ПользовательИБ = 
			ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентификаторПользователяИБ);

		Если ПользовательИБ = Неопределено Тогда
			ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
		КонецЕсли;
		
	КонецЕсли;
	
	ПользовательИБ.АутентификацияСтандартная = ВходРазрешен;
	ПользовательИБ.Имя = Логин;
	ПользовательИБ.ПолноеИмя = ТекущийОбъект.Наименование;
	
	Если ПарольИзменен Тогда
		ПользовательИБ.Пароль = Пароль;
	КонецЕсли;
	
	ПользовательИБ.Роли.Очистить();
	
	Если Объект.Должность = Перечисления.Должности.СистемныйАдминистратор Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
	ИначеЕсли Объект.Должность = Перечисления.Должности.МенеджерПоПродажам Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.БазовыеПрава);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.Вывод);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.СохранениеДанныхПользователя);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускВебКлиента);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускМобильногоКлиента);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускТонкогоКлиента);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.Продажи);		
	ИначеЕсли Объект.Должность = Перечисления.Должности.МенеджерПоЗакупкам Тогда
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.БазовыеПрава);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.Вывод);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.СохранениеДанныхПользователя);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускВебКлиента);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускМобильногоКлиента);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ЗапускТонкогоКлиента);		
		ПользовательИБ.Роли.Добавить(Метаданные.Роли.Закупки);
	КонецЕсли;	
	
	ПользовательИБ.Записать();
	
	ТекущийОбъект.ИдентификаторПользователяИБ = ПользовательИБ.УникальныйИдентификатор;	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПользователяИБ(ТекущийОбъект)
	
	ПарольИзменен = Ложь;
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ИдентификаторПользователяИБ) Тогда
		Возврат;
	КонецЕсли;
	
	ПользовательИБ = 
		ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентификаторПользователяИБ);
	
	Если ПользовательИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Логин = ПользовательИБ.Имя;
	ВходРазрешен = ПользовательИБ.АутентификацияСтандартная;
	
	Если ПользовательИБ.ПарольУстановлен Тогда
		Пароль = Новый УникальныйИдентификатор;
	Иначе
		Пароль = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти




